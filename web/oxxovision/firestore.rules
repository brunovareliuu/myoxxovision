rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /* ============ FUNCIONES AUXILIARES ============ */
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuth() &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.rol == 'admin';
    }

    function isManager() {
      return isAuth() &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.rol == 'gerente';
    }

    function isManagerOrAdmin() {
      return isAdmin() || isManager();
    }

    function isStoreEmployee(tiendaId) {
      return isAuth() &&
        exists(/databases/$(database)/documents/tiendas/$(tiendaId)/empleados/$(request.auth.uid));
    }

    function canModifyStore(tiendaId) {
      return isAdmin() || isManagerOrAdmin() || isStoreEmployee(tiendaId);
    }

    /* -------- Validaciones de tienda -------- */
    function validarCodigoTienda(data) {
      return data.codigoTienda is string &&
        data.codigoTienda.matches('^[A-Z0-9]{3}-[A-Z0-9]{3}-[A-Z0-9]{3}$');
    }

    function validarDatosTienda(data) {
      return data.nombre is string && data.nombre.size() > 0 &&
        data.estado is string && data.estado.size() > 0 &&
        data.ciudad is string && data.ciudad.size() > 0 &&
        data.direccion is string && data.direccion.size() > 0 &&
        validarCodigoTienda(data);
    }

    /* ============ USERS ============ */
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuth() && request.auth.uid == userId;
      allow update: if isOwner(userId);
      allow delete: if isAdmin();      // sólo admin borra
    }

    /* ============ TIENDAS ============ */
    match /tiendas/{tiendaId} {

      /* Puedes endurecer estas reglas usando canModifyStore() */
      allow read, write: if isAuth();

      /* ---- empleados ---- */
      match /empleados/{empleadoId} {
        allow read: if isAuth();
        allow create: if request.auth.uid == empleadoId &&
          request.resource.data.keys()
            .hasAll(['email', 'nombre', 'uid', 'codigoTienda', 'createdAt', 'activo']);
        allow update: if request.auth.uid == empleadoId || isAdmin();
        allow delete: if isAdmin();
      }

      /* ---- users dentro de tienda ---- */
      match /users/{userId} {
        allow read: if isAuth();
        allow create, update: if isOwner(userId);
        allow delete: if isAdmin();
      }

      /* ---- config3d ---- */
      match /config3d/{configId} {
        allow read, write: if isAuth();
      }

      /* ---- planogramas ---- */
      match /planogramas/{planogramaId} {
        allow read, write: if isAuth();

        match /productos/{productoId} {
          allow read, write: if isAuth();
        }

        match /niveles/{nivelId} {
          allow read, write: if isAuth();
        }
      }

      /* ---- tasks ---- */
      match /tasks/{taskId} {
        allow read, write: if isAuth();
      }
      
      /* ---- solicitudes de fotos ---- */
      match /solicitudes/{solicitudId} {
        // Reglas para leer solicitudes
        allow read: if isAuth() && (isManagerOrAdmin() || isStoreEmployee(tiendaId));
        
        // Reglas para crear solicitudes - solo admin y gerentes
        allow create: if isAuth() && (isManagerOrAdmin() || isAdmin());
        
        // Reglas para actualizar solicitudes - todos pueden actualizar para subir fotos
        allow update: if isAuth() && (
          // El admin siempre puede actualizar
          isManagerOrAdmin() || 
          // Empleados solo pueden completar solicitudes (con fotos)
          (isStoreEmployee(tiendaId) && 
            // Solo se permite actualizar ciertos campos limitados
            request.resource.data.diff(resource.data).affectedKeys().hasOnly(['completada', 'fechaCompletada', 'fotoUrl', 'completadaPor']))
        );
        
        // Solo admin puede eliminar
        allow delete: if isAuth() && isAdmin();
      }
    }

    /* ============ COLECCIONES GLOBALES ============ */
    match /productos/{productId} {
      allow read: if true;          // público
      allow write: if isAuth();
    }

    match /ventas/{docId} {
      allow read, write: if isAuth();
    }

    match /inventario/{docId} {
      allow read, write: if isAuth();
    }

    /* ============ PLANOGRAMAS_IMAGES ============ */
    match /planogramas_images/{docId} {
      allow read: if isAuth();
      allow create, update, delete: if isAuth();
    }

    /* ============ IMAGE_ANALYSIS (pública) ============ */
    match /image_analysis/{docId} {
      allow read, create, update, delete: if true;
    }

    /* ============ REGLA TEMPORAL (fallback) ============ */
    match /{document=**} {
      allow read, write: if isAuth();
    }
  }
}
