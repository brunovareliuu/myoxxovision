rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Función para verificar que el usuario está autenticado
    function isAuth() {
      return request.auth != null;
    }
    
    // Función para verificar que el usuario está accediendo a sus propios datos
    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    // Función para verificar si un usuario es administrador
    function isAdmin() {
      return isAuth() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.rol == 'admin';
    }
    
    // Reglas para la colección de usuarios
    match /users/{userId} {
      // Los usuarios pueden leer y actualizar solo sus propios datos
      // Los administradores pueden leer todos los datos de usuarios
      allow read: if isOwner(userId) || isAdmin();
      
      // Solo el propio usuario puede actualizar sus datos
      allow update: if isOwner(userId);
      
      // Solo el sistema de autenticación o un administrador puede crear nuevos usuarios
      allow create: if isOwner(userId) || isAdmin();
      
      // Solo un administrador puede eliminar usuarios
      allow delete: if isAdmin();
    }
    
    // Reglas para otras colecciones (ejemplo)
    match /ventas/{docId} {
      // Reglas para la colección de ventas (como ejemplo)
      allow read: if isAuth();
      allow write: if isAuth();
    }

    // Reglas para la colección de inventario (como ejemplo)
    match /inventario/{docId} {
      allow read: if isAuth();
      allow write: if isAuth() && (isAdmin() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.rol == 'gerente');
    }
  }
} 